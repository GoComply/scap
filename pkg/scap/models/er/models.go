// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for urn:oasis:names:tc:entity:xmlns:xml:catalog
package er

import (
	"encoding/xml"
)

// Element
type Catalog struct {
	XMLName xml.Name `xml:"catalog"`

	Id string `xml:"id,attr"`

	Prefer SystemOrPublic `xml:"prefer,attr"`

	Public []Public `xml:"public"`

	System []System `xml:"system"`

	Uri []Uri `xml:"uri"`

	RewriteSystem []RewriteSystem `xml:"rewriteSystem"`

	RewriteUri []RewriteUri `xml:"rewriteURI"`

	UriSuffix []UriSuffix `xml:"uriSuffix"`

	SystemSuffix []SystemSuffix `xml:"systemSuffix"`

	DelegatePublic []DelegatePublic `xml:"delegatePublic"`

	DelegateSystem []DelegateSystem `xml:"delegateSystem"`

	DelegateUri []DelegateUri `xml:"delegateURI"`

	NextCatalog []NextCatalog `xml:"nextCatalog"`

	Group []Group `xml:"group"`
}

// Element
type Public struct {
	XMLName xml.Name `xml:"public"`

	PublicId PublicIdentifier `xml:"publicId,attr"`

	Uri string `xml:"uri,attr"`

	Id string `xml:"id,attr"`
}

// Element
type System struct {
	XMLName xml.Name `xml:"system"`

	SystemId string `xml:"systemId,attr"`

	Uri string `xml:"uri,attr"`

	Id string `xml:"id,attr"`
}

// Element
type Uri struct {
	XMLName xml.Name `xml:"uri"`

	Name string `xml:"name,attr"`

	Uri string `xml:"uri,attr"`

	Id string `xml:"id,attr"`
}

// Element
type RewriteSystem struct {
	XMLName xml.Name `xml:"rewriteSystem"`

	SystemIdStartString string `xml:"systemIdStartString,attr"`

	RewritePrefix string `xml:"rewritePrefix,attr"`

	Id string `xml:"id,attr"`
}

// Element
type RewriteUri struct {
	XMLName xml.Name `xml:"rewriteURI"`

	UriStartString string `xml:"uriStartString,attr"`

	RewritePrefix string `xml:"rewritePrefix,attr"`

	Id string `xml:"id,attr"`
}

// Element
type SystemSuffix struct {
	XMLName xml.Name `xml:"systemSuffix"`

	SystemIdSuffix string `xml:"systemIdSuffix,attr"`

	Uri string `xml:"uri,attr"`

	Id string `xml:"id,attr"`
}

// Element
type UriSuffix struct {
	XMLName xml.Name `xml:"uriSuffix"`

	UriSuffix string `xml:"uriSuffix,attr"`

	Uri string `xml:"uri,attr"`

	Id string `xml:"id,attr"`
}

// Element
type DelegatePublic struct {
	XMLName xml.Name `xml:"delegatePublic"`

	PublicIdStartString PartialPublicIdentifier `xml:"publicIdStartString,attr"`

	Catalog string `xml:"catalog,attr"`

	Id string `xml:"id,attr"`
}

// Element
type DelegateSystem struct {
	XMLName xml.Name `xml:"delegateSystem"`

	SystemIdStartString string `xml:"systemIdStartString,attr"`

	Catalog string `xml:"catalog,attr"`

	Id string `xml:"id,attr"`
}

// Element
type DelegateUri struct {
	XMLName xml.Name `xml:"delegateURI"`

	UriStartString string `xml:"uriStartString,attr"`

	Catalog string `xml:"catalog,attr"`

	Id string `xml:"id,attr"`
}

// Element
type NextCatalog struct {
	XMLName xml.Name `xml:"nextCatalog"`

	Catalog string `xml:"catalog,attr"`

	Id string `xml:"id,attr"`
}

// Element
type Group struct {
	XMLName xml.Name `xml:"group"`

	Prefer SystemOrPublic `xml:"prefer,attr"`

	Id string `xml:"id,attr"`

	Public []Public `xml:"public"`

	System []System `xml:"system"`

	Uri []Uri `xml:"uri"`

	RewriteSystem []RewriteSystem `xml:"rewriteSystem"`

	RewriteUri []RewriteUri `xml:"rewriteURI"`

	UriSuffix []UriSuffix `xml:"uriSuffix"`

	SystemSuffix []SystemSuffix `xml:"systemSuffix"`

	DelegatePublic []DelegatePublic `xml:"delegatePublic"`

	DelegateSystem []DelegateSystem `xml:"delegateSystem"`

	DelegateUri []DelegateUri `xml:"delegateURI"`

	NextCatalog []NextCatalog `xml:"nextCatalog"`
}

// XSD ComplexType declarations

// XSD SimpleType declarations

type PubIdChars string

type PublicIdentifier string

type PartialPublicIdentifier string

type SystemOrPublic string

const SystemOrPublicSystem SystemOrPublic = "system"

const SystemOrPublicPublic SystemOrPublic = "public"
